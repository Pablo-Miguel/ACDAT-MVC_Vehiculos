/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vahiculos.acdat.Vista;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import vahiculos.acdat.Controladores.ControllerCRUD;
import vahiculos.acdat.DAOs.ConexionDB;
import vahiculos.acdat.Servicio.Vehiculo;

/**
 *
 * @author Nitro
 */
public class PanelCRUD extends javax.swing.JPanel {

    /**
     * Creates new form PanelCRUD
     */
    private ControllerCRUD controller;
    private Vehiculo vehiculoSeleccionado;
    private VentanaPrincipal ventana;
    private boolean insertar = true;

    public PanelCRUD(VentanaPrincipal ventana) {
        initComponents();

        this.ventana = ventana;

        ControllerCRUD.cargarTabla(tablaVehiculos);
        
        //System.out.println(ConexionDB.getVehiculo("1221FDF").toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPanel = new javax.swing.JScrollPane();
        tablaVehiculos = new javax.swing.JTable();
        lblMarca = new javax.swing.JLabel();
        lblModelo = new javax.swing.JLabel();
        lblMatricula = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        txtMatricula = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        btRegistrar = new javax.swing.JButton();
        btLeer = new javax.swing.JButton();
        btBorrar = new javax.swing.JButton();

        tablaVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Marca", "Modelo", "Matricula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaVehiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaVehiculosMouseClicked(evt);
            }
        });
        tablaVehiculos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tablaVehiculosPropertyChange(evt);
            }
        });
        jScrollPanel.setViewportView(tablaVehiculos);

        lblMarca.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMarca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMarca.setText("Marca");
        lblMarca.setPreferredSize(new java.awt.Dimension(41, 16));

        lblModelo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblModelo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblModelo.setText("Modelo");

        lblMatricula.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMatricula.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMatricula.setText("Matr√≠cula");
        lblMatricula.setPreferredSize(new java.awt.Dimension(41, 16));

        txtModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtModeloKeyPressed(evt);
            }
        });

        txtMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatriculaKeyPressed(evt);
            }
        });

        txtMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMarcaKeyPressed(evt);
            }
        });

        btRegistrar.setText("Registrar");
        btRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegistrarActionPerformed(evt);
            }
        });

        btLeer.setText("Leer");
        btLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLeerActionPerformed(evt);
            }
        });

        btBorrar.setText("Borrar");
        btBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblModelo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btLeer, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLeer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegistrarActionPerformed
        
        insertar(insertar);

    }//GEN-LAST:event_btRegistrarActionPerformed

    private void btLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLeerActionPerformed

        if (tablaVehiculos.getSelectedRows().length > 1) {
            JOptionPane.showMessageDialog(this, "Porfavor, solo se puede seleccionar un solo veh√≠culo");
        } else if (tablaVehiculos.getSelectedRow() != -1) {
            int index = tablaVehiculos.getSelectedRow();

            String marca = (String) tablaVehiculos.getValueAt(index, 0);
            String modelo = (String) tablaVehiculos.getValueAt(index, 1);
            String matricula = (String) tablaVehiculos.getValueAt(index, 2);

            txtMarca.setText(marca);
            txtModelo.setText(modelo);
            txtMatricula.setText(matricula);

            vehiculoSeleccionado = new Vehiculo(marca, modelo, matricula);

            insertar = false;
        } else {
            JOptionPane.showMessageDialog(this, "Porfavor, seleccione un veh√≠culo de la tabla");
        }

    }//GEN-LAST:event_btLeerActionPerformed

    private void tablaVehiculosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tablaVehiculosPropertyChange

        if (!tablaVehiculos.isEditing()) {

            modificar();

        }
    }//GEN-LAST:event_tablaVehiculosPropertyChange

    private void tablaVehiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaVehiculosMouseClicked

        int index = tablaVehiculos.getSelectedRow();
        vehiculoSeleccionado = new Vehiculo((String) tablaVehiculos.getValueAt(index, 0), (String) tablaVehiculos.getValueAt(index, 1), (String) tablaVehiculos.getValueAt(index, 2));

    }//GEN-LAST:event_tablaVehiculosMouseClicked

    private void txtMarcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMarcaKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            insertar(insertar);
        }
        
    }//GEN-LAST:event_txtMarcaKeyPressed

    private void txtModeloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtModeloKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            insertar(insertar);
        }
        
    }//GEN-LAST:event_txtModeloKeyPressed

    private void txtMatriculaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatriculaKeyPressed
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            insertar(insertar);
        }
        
    }//GEN-LAST:event_txtMatriculaKeyPressed

    private void btBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBorrarActionPerformed
        
        if (tablaVehiculos.getSelectedRows().length > 1) {
            JOptionPane.showMessageDialog(this, "Porfavor, solo se puede seleccionar un solo veh√≠culo");
        } else if (tablaVehiculos.getSelectedRow() != -1) {
            int index = tablaVehiculos.getSelectedRow();

            String marca = (String) tablaVehiculos.getValueAt(index, 0);
            String modelo = (String) tablaVehiculos.getValueAt(index, 1);
            String matricula = (String) tablaVehiculos.getValueAt(index, 2);

            vehiculoSeleccionado = new Vehiculo(marca, modelo, matricula);
            
            int comp = ControllerCRUD.borrarVehiculo((String) tablaVehiculos.getValueAt(index, 2), tablaVehiculos);
            
            if (comp == 0) {
                JOptionPane.showMessageDialog(this, "Se ha borrado el veh√≠culo correctamente");
            } else if (comp == -1) {
                JOptionPane.showMessageDialog(this, "El veh√≠culo no se ha podido borrar");
            }
            
            
            //insertar = false;
        } else {
            JOptionPane.showMessageDialog(this, "Porfavor, seleccione un veh√≠culo de la tabla");
        }
        
    }//GEN-LAST:event_btBorrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBorrar;
    private javax.swing.JButton btLeer;
    private javax.swing.JButton btRegistrar;
    private javax.swing.JScrollPane jScrollPanel;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JTable tablaVehiculos;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtModelo;
    // End of variables declaration//GEN-END:variables

    private void modificar() {

        if (tablaVehiculos.getSelectedRow() != -1) {
            int index = tablaVehiculos.getSelectedRow();

            if (tablaVehiculos.getValueAt(index, 0).equals("")) {
                JOptionPane.showMessageDialog(this, "Porfavor, no deje marca del veh√≠culo sin rellenar");
                tablaVehiculos.setValueAt(vehiculoSeleccionado.getMarca(), index, 0);
            } else if (tablaVehiculos.getValueAt(index, 1).equals("")) {
                JOptionPane.showMessageDialog(this, "Porfavor, no deje modelo del veh√≠culo sin rellenar");
                tablaVehiculos.setValueAt(vehiculoSeleccionado.getModelo(), index, 1);
            } else if (tablaVehiculos.getValueAt(index, 2).equals("")) {
                JOptionPane.showMessageDialog(this, "Porfavor, no deje matricula del veh√≠culo sin rellenar");
                tablaVehiculos.setValueAt(vehiculoSeleccionado.getMatricula(), index, 2);
            } else {

                int comp = ControllerCRUD.modificarVehiculo((String) tablaVehiculos.getValueAt(index, 0), (String) tablaVehiculos.getValueAt(index, 1), (String) tablaVehiculos.getValueAt(index, 2), tablaVehiculos, vehiculoSeleccionado.getMatricula());

                if (comp == 0) {
                    JOptionPane.showMessageDialog(this, "Se ha modificado el veh√≠culo correctamente");
                } else if (comp == -1) {
                    JOptionPane.showMessageDialog(this, "La nueva matr√≠cula del veh√≠culo ya se encuentra en la base de datos");
                    tablaVehiculos.setValueAt(vehiculoSeleccionado.getMatricula(), index, 2);
                }
            }
        }
    }

    private void insertar(boolean insertar) {
        if (txtMarca.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Porfavor, no deje marca del veh√≠culo sin rellenar");
        } else if (txtMarca.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Porfavor, no deje modelo del veh√≠culo sin rellenar");
        } else if (txtMarca.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Porfavor, no deje matricula del veh√≠culo sin rellenar");
        }else if (insertar) {
            int comp = ControllerCRUD.insertarVehiculo(txtMarca.getText(), txtModelo.getText(), txtMatricula.getText(), tablaVehiculos);

            if (comp == 0) {
                JOptionPane.showMessageDialog(this, "Se ha insertado el veh√≠culo correctamente");
            } else if (comp == 1) {
                JOptionPane.showMessageDialog(this, "El veh√≠culo ya est√° en la base de datos");
            } else if (comp == -1){
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error al insertar el veh√≠culo");
            }

            txtMarca.setText("");
            txtModelo.setText("");
            txtMatricula.setText("");

        } else {
            int comp = ControllerCRUD.modificarVehiculo(txtMarca.getText(), txtModelo.getText(), txtMatricula.getText(), tablaVehiculos, vehiculoSeleccionado.getMatricula());

            if (comp == 0) {
                JOptionPane.showMessageDialog(this, "Se ha modificado el veh√≠culo correctamente");
            } else if (comp == -1) {
                JOptionPane.showMessageDialog(this, "La nueva matr√≠cula del veh√≠culo ya se encuentra en la base de datos");
            }

            txtMarca.setText("");
            txtModelo.setText("");
            txtMatricula.setText("");

            this.insertar = true;
        }
    }
}
